@page "/showprofile"

@using Microsoft.Identity.Web
@using Microsoft.Graph
@inject Microsoft.Graph.GraphServiceClient GraphServiceClient
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<h1>Me</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-condensed" style="font-family: monospace">
        <tr>
            <th>Property</th>
            <th>Value</th>
        </tr>
        <tr>
            <td>Name</td>
            <td>@_user.DisplayName</td>
        </tr>
        <tr>
            <td>Mail</td>
            <td>@_user.Mail</td>
        </tr>
        <tr>
            <td>MobilePhone</td>
            <td>@_user.MobilePhone</td>
        </tr>
        <tr>
            <td>OfficeLocation</td>
            <td>@_user.OfficeLocation</td>
        </tr>
        <tr>
            <td>JobTitle</td>
            <td>@_user.JobTitle</td>
        </tr>
    </table>

    if (_imgSrc is not null)
    {
        <img src="@_imgSrc"/>
    }
}

@code {
    User? _user;
    string? _imgSrc;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _user = await GraphServiceClient.Me.Request().GetAsync();
            _imgSrc = await GetMePhotoAsync();
        }
        catch (Exception ex)
        {
            ConsentHandler.HandleException(ex);
        }
    }

    public async Task<string> GetMePhotoAsync()
    {
        try
        {
            Stream photoResponse = await GraphServiceClient.Me.Photo.Content.Request().GetAsync();

            if (photoResponse != null)
            {
                var memoryStream = new MemoryStream();
                photoResponse.CopyTo(memoryStream);
                var byteArray = memoryStream.ToArray();
                var base64 = Convert.ToBase64String(byteArray);
                return $"data:image/png;base64,{base64}";
            }
            else
            {
                return null;
            }
        }
        catch (ServiceException ex)
        {
            Console.WriteLine($"Error getting signed-in user profilephoto: {ex.Message}");
            return null;
        }
    }
}
